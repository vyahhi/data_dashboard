// Generated by CoffeeScript 1.9.1
(function() {
  var plot_leaderboard;

  plot_leaderboard = function() {
    var highlightOneself, labelToClassName, labelToTitleText, reformatScoreByLabel, table;
    highlightOneself = function(selection) {
      selection.classed("lb-oneself", function(d) {
        return d.id === parseInt(d3.select("#select-student").property("value"));
      });
    };
    reformatScoreByLabel = function(val, label) {
      switch (label) {
        case "top10_problem":
        case "top10_video":
          return (val * 100).toFixed(1) + "%";
        case "top10_active":
          return val + "days";
        case "top10_timespent":
          return Math.round(val / 60) + "h" + (val % 60) + "min";
      }
    };
    labelToClassName = function(label) {
      return "lb-" + label.replace("_", "-");
    };
    labelToTitleText = {
      "top10_problem": "10 students completed most problems",
      "top10_video": "10 students completed most videos",
      "top10_active": "10 most active students",
      "top10_timespent": "10 students spent most time"
    };
    table = d3.select("#leaderboard").append("table").attr("width", "100%").attr("height", "192px");
    d3.json("/data/leaderboard.json", function(top10) {
      var render;
      render = function() {
        var barWidth, label, nameWidth, rankWidth, rows, scaler, width;
        table.selectAll("*").remove();
        width = table[0][0].offsetWidth;
        rankWidth = width / 10;
        nameWidth = rankWidth * 4;
        barWidth = rankWidth * 5;
        label = d3.select("#select-top10").property("value");
        rows = table.selectAll("tr").data(top10[label]);
        rows.enter().append("tr");
        rows.append("td").attr("class", "text-ranks").attr("width", rankWidth).text(function(d, i) {
          return "#" + (i + 1);
        });
        rows.append("td").attr("class", "text-student-names").attr("width", 0).style("opacity", 0).transition().duration(500).attr("width", nameWidth).style("opacity", 1).text(function(d) {
          return "student-" + d.id;
        });
        scaler = d3.scale.linear().domain([0, top10[label][0].value]).range([0, barWidth]);
        rows.append("td").attr("width", barWidth).attr("class", "text-scores").append("div").style("width", 0).transition().duration(1000).style("width", function(d) {
          return scaler(d.value) + "px";
        }).attr("class", labelToClassName(label)).text(function(d) {
          return reformatScoreByLabel(d.value, label);
        });
        rows.exit().remove();
        rows.selectAll("td").call(highlightOneself);
      };
      d3.select("#select-top10").selectAll("option").data(["top10_problem", "top10_video", "top10_active", "top10_timespent"]).enter().append("option").attr("value", function(d) {
        return d;
      }).text(function(d) {
        return labelToTitleText[d];
      });
      render();
      d3.select(window).on("resize", render);
      d3.select("#leaderboard").on("change", render);
      d3.select("#select-student").on("change.leaderboard", function() {
        table.selectAll("td").call(highlightOneself);
      });
    });
  };

  plot_leaderboard();

}).call(this);

//# sourceMappingURL=leaderboard-bar-chart.js.map
