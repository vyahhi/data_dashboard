// Generated by CoffeeScript 1.9.1
var plot_leaderboard;

plot_leaderboard = function(student_id, top_data) {
  var highlightOneself, labelToClassName, labelToTitleText, reformatScoreByLabel, render, table;
  highlightOneself = function(selection) {
    selection.classed("lb-oneself", function(d) {
      return d.user === student_id;
    });
  };
  reformatScoreByLabel = function(val, label) {
    switch (label) {
      case "score_rating":
        return val + " points";
    }
  };
  labelToClassName = function(label) {
    return "lb-" + label.replace("_", "-");
  };
  labelToTitleText = {
    "score_rating": "Score rating"
  };
  table = d3.select("#leaderboard").append("table").attr("width", "100%").attr("height", "192px");
  render = function() {
    var barWidth, label, nameWidth, rankWidth, rows, scaler, width;
    table.selectAll("*").remove();
    width = table[0][0].offsetWidth;
    rankWidth = width / 10;
    nameWidth = rankWidth * 4;
    barWidth = rankWidth * 5;
    label = d3.select("#select-top10").property("value");
    rows = table.selectAll("tr").data(top_data[label]);
    rows.enter().append("tr");
    rows.append("td").attr("class", "text-ranks").attr("width", rankWidth).text(function(d) {
      return "# " + d.rating;
    });
    rows.append("td").attr("class", "text-student-names").attr("width", 0).style("opacity", 0).transition().duration(500).attr("width", nameWidth).style("opacity", 1).text(function(d) {
      return d.first_name + " " + d.last_name;
    });
    scaler = d3.scale.linear().domain([0, top_data[label][0].value]).range([0, barWidth]);
    rows.append("td").attr("width", barWidth).attr("class", "text-scores").append("div").style("width", 0).transition().duration(1000).style("width", function(d) {
      return scaler(d.value) + "px";
    }).attr("class", labelToClassName(label)).text(function(d) {
      return reformatScoreByLabel(d.value, label);
    });
    rows.exit().remove();
    rows.selectAll("td").call(highlightOneself);
  };
  d3.select("#select-top10").selectAll("option").data(["score_rating"]).enter().append("option").attr("value", function(d) {
    return d;
  }).text(function(d) {
    return labelToTitleText[d];
  });
  render();
  d3.select(window).on("resize", render);
  d3.select("#leaderboard").on("change", render);
};
